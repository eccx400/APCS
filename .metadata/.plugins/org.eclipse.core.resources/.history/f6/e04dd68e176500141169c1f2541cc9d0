import java.awt.Color;
import java.awt.geom.*;
import java.util.*;
import gpdraw.*;


/**
 * TODO Write a one-sentence summary of your class here. TODO Follow it with
 * additional details about its purpose, what abstraction it represents, and how
 * to use it.
 *
 * @author Eric Cheng
 * @version 4 Novembre 2014
 *
 * @author Period - 2
 * @author Assignment - A15_1IrregularPolygon
 * 
 * @author Sources - Eric Cheng
 */
public class IrregularPolygon
{
    private DrawingTool pen = new DrawingTool( new SketchPad( 300, 300, 0 ) );

    private ArrayList<Point2D.Double> myPolygon;


    // constuctors

    /**
     * 
     */
    public IrregularPolygon()
    {
        myPolygon = new ArrayList<Point2D.Double>();
    }


    // public methods

    /**
     * @param aPoint
     */
    public void add( Point2D.Double aPoint )
    {
        myPolygon.add( aPoint );
    }


    /**
     * @return
     */
    public double perimeter()
    {
        if ( myPolygon.isEmpty() )
        {
            return 0;
        }
        
        Point2D.Double previous = myPolygon.get( 0 );
        double perimeter = 0.0;
        for ( Point2D.Double p : myPolygon )
        {
            perimeter += previous.distance( p );
            previous = p;
        }
        perimeter += previous.distance( myPolygon.get( 0 ) );
        return perimeter;
    }

    /**
     * 
     * @return
     */
    public double area()
    {
        return 0.0; // fix this!
    }


    public void draw()
    {

    }
    
    /**double perimeter = 0.0;
    Point2D.Double previous = myPolygon.get( 0 );
    for ( Point2D.Double p : myPolygon )
    {
        perimeter += previous.distance( p );
        previous = p;
    }
    perimeter += previous.distance( myPolygon.get( 0 ) );
    return perimeter;
    */
}
